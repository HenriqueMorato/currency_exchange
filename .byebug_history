exit
params[:id]
self.class.columns.each do |column|
params
continue
params
exit
results
exit
results
exit
params
continue
results.map { |result| self.new(result) }
results
exit
results.map { |result| new(result) }
results.map { |result| self.new(result) }
results.map { |result| new(result) }
results.class
results.map do |result|
continue
results
continue
exit
headers
exit
results
headers
exit
Transaction.new(*results[1])
Transaction.new(**results[1])
Transaction.new(results[1])
results[1]
new(results[1])
new(results[1]
parse_all(results)
results
exit
results
exit
continue
Database.all(self)
results
continue
exit
db.execute "select * from #{object.tableize}"
db.execute2 "select * from #{object.tableize}"
exit
result.to_h
result.to_hash
parse_all(result)
result
exit
result.columns
exit
result.columns
exit
result.columns
exit
result
exit
db.execute
db.prepare "select * from #{object.tableize}"
exit
self.class
self
continue
exit
attribute_values(object)
question_marks(object)
attribute_keys(object)
object.tableize
continue
attribute_keys(object)
exit
attribute_values(object)
exit
attribute_values(object)
*attribute_values(object)
exit
DateTime.now.to_s
DateTime.now
Date.now
attribute_values(object)
